import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'de.mobilej.unmock'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'com.trevjonez.composer'
composer {
    apkInstallTimeout 600
}

repositories {
    maven {url 'https://repo1.maven.org/maven2/' }
    mavenCentral()
    google()
    maven { url 'https://jitpack.io' }
    maven { url 'https://repo.clojars.org' }
    maven { url 'https://linkedin.jfrog.io/artifactory/open-source/' }
}

android {
    namespace "org.ligi.gobandroid_hd"
    flavorDimensions "analytics", "cloud", "autostart"

    productFlavors {
        withAnalytics {
            dimension "analytics"
        }
        noAnalytics {
            dimension "analytics"
        }
        withCloud {
            dimension "cloud"
        }
        noCloud {
            dimension "cloud"
        }
        withAutostart {
            dimension "autostart"
        }
        noAutostart {
            dimension "autostart"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    tasks.withType(KotlinCompile).configureEach {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    android.variantFilter { variant ->
        def analytics = variant.getFlavors().get(0).name
        def cloud = variant.getFlavors().get(1).name

        variant.setIgnore((project.hasProperty("singleFlavor") && (analytics != 'withAnalytics') && (cloud != 'withCloud')) ||
                (analytics == 'withAnalytics' && cloud == 'noCloud') ||
                (analytics == 'noAnalytics' && cloud == 'withCloud'))

    }

    compileSdkVersion 36

    defaultConfig {
        versionCode 260
        versionName "2.6.0"
        minSdkVersion 21
        targetSdkVersion 34
        applicationId "org.ligi.gobandroid_hd"
        testInstrumentationRunner "org.ligi.gobandroid_hd.AppReplacingRunner"
        archivesBaseName = "Gobandroid-$versionName"
        vectorDrawables.useSupportLibrary = true
    }


    lintOptions {
        warning 'MissingTranslation'
        warning 'ResourceType'

        // for OKIO
        warning 'InvalidPackage'
    }

    packagingOptions {
        // needed for assertJ
        exclude 'asm-license.txt'
        exclude 'LICENSE'
        exclude 'NOTICE'

        // important for androidTest
        exclude 'LICENSE.txt'

        exclude 'META-INF/lib_release.kotlin_module'
    }

    testOptions {
        animationsDisabled = true
        unitTests.returnDefaultValues = true
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
        }

        debug {
            debuggable true
            // to avoid MultiDex http://stackoverflow.com/questions/38329248/dexindexoverflowexception-when-running-androidtests
            minifyEnabled false
        }
    }
    buildFeatures {
        viewBinding true
        buildConfig true
        aidl true
    }
} // android

configurations {
    all {
        exclude module: 'commons-logging'
        exclude module: 'httpclient'
        exclude group: 'com.google.guava', module: 'listenablefuture'
    }
}

dependencies {
    implementation "com.github.permissions-dispatcher:permissionsdispatcher:4.9.2"
    kapt "com.github.permissions-dispatcher:permissionsdispatcher-processor:4.9.2"
    implementation 'com.github.salomonbrys.kodein:kodein:4.1.0'
    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation 'androidx.recyclerview:recyclerview:1.4.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'com.github.ligi:KAXT:1.0'
    implementation 'com.github.ligi:tracedroid:4.1'
    implementation 'com.jakewharton.timber:timber:5.0.1'

    implementation 'com.github.ligi.snackengage:snackengage-playrate:0.27'
    implementation 'com.github.ligi:ExtraCompats:1.0'
    implementation 'jchardet:jchardet:1.1.0'
    implementation 'com.squareup.okhttp3:okhttp:5.1.0'
    implementation 'com.n3twork.druid:alphanum:1.0.3'
    implementation 'androidx.annotation:annotation:1.9.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "com.chibatching.kotpref:kotpref:$kotpref_version"
    implementation "com.chibatching.kotpref:initializer:$kotpref_version"
    withAnalyticsImplementation "com.google.android.gms:play-services-analytics:18.1.1"
    withCloudImplementation "com.google.android.gms:play-services-games:23.2.0"
    withCloudImplementation "com.google.android.gms:play-services-plus:17.0.0"
    withCloudImplementation "com.google.android.gms:play-services-gcm:17.0.0"
    withCloudImplementation('com.google.apis:google-api-services-games:v1-rev98-1.20.0') {
        exclude module: 'jsr305'
    }
    androidTestImplementation 'androidx.test:runner:1.7.0'
    androidTestImplementation 'androidx.test:rules:1.7.0'
    androidTestImplementation 'org.hamcrest:hamcrest-library:3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.7.0'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.3.0'
    androidTestImplementation 'com.github.ligi:trulesk:4.3'
    androidTestImplementation 'androidx.annotation:annotation:1.9.1'
    androidTestImplementation 'com.squareup.assertj:assertj-android:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.3.0'
    testImplementation 'com.squareup.assertj:assertj-android:1.2.0'
    testImplementation 'androidx.annotation:annotation:1.9.1'
    testImplementation 'junit:junit:4.13.2'

    implementation 'com.google.android.flexbox:flexbox:3.0.0'
    implementation 'org.greenrobot:eventbus:3.3.1'
    implementation "androidx.concurrent:concurrent-futures:1.3.0"
    implementation 'com.google.guava:guava:33.4.8-android'
}
